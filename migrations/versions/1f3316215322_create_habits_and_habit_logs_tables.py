"""create habits and habit_logs tables

Revision ID: 1f3316215322
Revises: 
Create Date: 2025-08-20 19:14:16.085860

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1f3316215322'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('habits',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('kind', sa.String(length=20), nullable=False),
    sa.Column('unit', sa.String(length=20), nullable=False),
    sa.Column('color', sa.String(length=7), nullable=False),
    sa.Column('daily_target', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('habit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('habit_id', sa.Integer(), nullable=False),
    sa.Column('log_date', sa.Date(), nullable=False),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('note', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['habit_id'], ['habits.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('habit_id', 'log_date', name='uq_habit_date')
    )
    with op.batch_alter_table('habit_logs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_habit_logs_log_date'), ['log_date'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('habit_logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_habit_logs_log_date'))

    op.drop_table('habit_logs')
    op.drop_table('habits')
    # ### end Alembic commands ###
